<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="10929" started-at="2023-08-13T17:46:42 UTC" finished-at="2023-08-13T17:46:53 UTC">
    <groups>
    </groups>
    <test name="Default test" duration-ms="10929" started-at="2023-08-13T17:46:42 UTC" finished-at="2023-08-13T17:46:53 UTC">
      <class name="tests.ExtentReportsTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ExtentReportsTest@a7e666]" name="beforeTest" is-config="true" duration-ms="4487" started-at="2023-08-13T17:46:42 UTC" finished-at="2023-08-13T17:46:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testHome()[pri:1, instance:tests.ExtentReportsTest@a7e666]" name="testHome" duration-ms="2286" started-at="2023-08-13T17:46:47 UTC" finished-at="2023-08-13T17:46:49 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHome -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.ExtentReportsTest@a7e666]" name="afterMethod" is-config="true" duration-ms="4" started-at="2023-08-13T17:46:49 UTC" finished-at="2023-08-13T17:46:49 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHome status=SUCCESS method=ExtentReportsTest.testHome()[pri:1, instance:tests.ExtentReportsTest@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testregister()[pri:2, instance:tests.ExtentReportsTest@a7e666]" name="testregister" duration-ms="2599" started-at="2023-08-13T17:46:49 UTC" finished-at="2023-08-13T17:46:52 UTC">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Register] but found [Sign Up]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Register] but found [Sign Up]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at tests.ExtentReportsTest.testregister(ExtentReportsTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregister -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.ExtentReportsTest@a7e666]" name="afterMethod" is-config="true" duration-ms="401" started-at="2023-08-13T17:46:52 UTC" finished-at="2023-08-13T17:46:52 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testregister status=FAILURE method=ExtentReportsTest.testregister()[pri:2, instance:tests.ExtentReportsTest@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ExtentReportsTest@a7e666]" name="afterTest" is-config="true" duration-ms="1069" started-at="2023-08-13T17:46:52 UTC" finished-at="2023-08-13T17:46:53 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.ExtentReportsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
